---
import { initialCategories } from '../data/categories';
import type { Device } from '../types/Device';

const infrastructure = initialCategories.find((cat) => cat.id === 'infrastructure');
if (!infrastructure) {
  throw new Error('No Infrastructure category found.');
}

const devicesJSON = JSON.stringify(infrastructure.devices);
---

<section class="border p-4 rounded">
  <h2 class="text-xl font-semibold mb-4">Infrastructure</h2>

  <table class="min-w-full">
    <thead class="bg-gray-200">
      <tr>
        <th class="text-left py-2 px-3">Device Type</th>
        <th class="text-left py-2 px-3">Quantity</th>
        <th class="text-left py-2 px-3">EPS</th>
        <th class="text-left py-2 px-3">GB/day</th>
      </tr>
    </thead>
    <tbody id="infraTbody"></tbody>
  </table>
</section>

<script define:vars={{ devicesJSON }}>
  let devices = JSON.parse(devicesJSON);

  function computeGbPerDay(d) {
    const eventSizeKB = 0.5;
    const dailyEvents = d.eps * 86400;
    return (dailyEvents * eventSizeKB * d.quantity) / (1024 * 1024);
  }

  function renderRows() {
    const tbody = document.getElementById('infraTbody');
    if (!tbody) return;

    tbody.innerHTML = '';

    devices.forEach((d) => {
      const gbDay = computeGbPerDay(d);
      d.gbPerDay = parseFloat(gbDay.toFixed(2));

      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td class="py-2 px-3">${d.name}</td>
        <td class="py-2 px-3"><input type="number" min="0" value="${d.quantity}" class="border w-16 px-1 quantity-input" data-id="${d.id}"></td>
        <td class="py-2 px-3"><input type="number" min="0" step="0.1" value="${d.eps}" class="border w-16 px-1 eps-input" data-id="${d.id}"></td>
        <td class="py-2 px-3">${d.gbPerDay.toFixed(2)}</td>
      `;

      tbody.appendChild(tr);
    });

    // Add event listeners
    document.querySelectorAll('.quantity-input, .eps-input').forEach(input => {
      input.addEventListener('change', (e) => {
        const id = e.target.dataset.id;
        const device = devices.find(d => d.id === id);
        if (device) {
          if (e.target.classList.contains('quantity-input')) {
            device.quantity = parseInt(e.target.value) || 0;
          } else {
            device.eps = parseFloat(e.target.value) || 0;
          }
          renderRows();
        }
      });
    });
  }

  // Initial render
  renderRows();
</script>